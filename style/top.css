body {
    background: #F0F0EE;
}
/*========= ローディング画面のためのCSS ===============*/
#splash {
	position: fixed;
	width: 100%;
	height: 100%;
    background-image: url(../image/washi.jpg);
	z-index: 9999999;
	text-align:center;
	color:#000000;
}

#splash-logo {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

/*========= 画面遷移のためのCSS ===============*/

/*画面遷移アニメーション*/
.splashbg{
    display: none;
}

/*bodyにappearクラスがついたら出現*/
body.appear .splashbg{
    display: block;
    content: "";
    position:fixed;
	z-index: 999;
    width: 100%;
    height: 100vh;
    top: 0;
	left: 0;
    transform: scaleX(0);
    background-color: rgba(213, 83, 3, 0.731);/*伸びる背景色の設定*/
	animation-name:PageAnime;
	animation-duration:1.2s;
	animation-timing-function:ease-in-out;
	animation-fill-mode:forwards;
}

@keyframes PageAnime{
	0% {
		transform-origin:left;
		transform:scaleX(0);
	}
	50% {
		transform-origin:left;
		transform:scaleX(1);
	}
	50.001% {
		transform-origin:right;
	}
	100% {
		transform-origin:right;
		transform:scaleX(0);
	}
}

/*画面遷移の後現れるコンテンツ設定*/
#container{
	opacity: 0;/*はじめは透過0に*/
}

/*bodyにappearクラスがついたら出現*/
body.appear #container{
	animation-name:PageAnimeAppear;
	animation-duration:1s;
	animation-delay: 0.8s;
	animation-fill-mode:forwards;
	opacity: 0;
}

@keyframes PageAnimeAppear{
	0% {
	opacity: 0;
	}
	100% {
	opacity: 1;
}
}
#splash-logo {
    position:relative;
}
/* momoの移動 */
#peachImg {
    width: 200px;
    height: auto;
    position: absolute;
    top: -20vh;
    left: 30vw;
    animation: peachRotate 3s ease 1s 1 forwards;
}
@keyframes peachRotate {
    0% {
        rotate: 0deg;
        left: 32vw;
      }
    25%{
        rotate: -10deg;
        left: 34vw;
    }
    50%{
        rotate: 10deg;
        left: 38vw;
    }
      90% {
        rotate: -10deg;
        left: 42vw;
      }
      100%{
        rotate: 0deg;
        left: 42vw;
      }
    }
/* 波の移動 */
#waveImg {
    width: 500px;
    height: auto;
    position: absolute;
    top: -35vh;
    left: 33vw;
    animation: waves 3s ease 1s 1 forwards;
}
@keyframes waves {
    0% {
        top: -35vh;
    }
    25%{
        top: -33vh;
    }
    50% {
        top: -35vh;
    }
    90% {
        top: -32vh;
    }
    100% {
        top: -35vh;
    }
}

.header {
    position: relative;/*h1の中央寄せ配置の起点とするためのrelative*/
    height: 100vh;/*高さを全画面にあわせる*/
    background: rgba(254, 181, 46, 0.2);
}
.header_content {
    position: fixed;
    width: 30%;
    margin-left: 68%;
    padding: 3rem 0;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    z-index: 10;
}
.header_title {
    position: absolute;
    font-size: 7rem;
    padding: 1rem;
    margin-left: .5rem;
    color: #fff;
    font-family: 'Anton', sans-serif;
    bottom: 0;
    left: 0;

}
.header_trans > button {
    font-size: 2rem;
    padding: 1rem;
    font-family: 'Agdasima', sans-serif;
    cursor: pointer;
    transition-duration: .3s;
}
.header_trans > button:hover {
    opacity: 0.5;
}

#video-area{
    /* position: fixed; */
    z-index: -1;/*最背面に設定*/
    top: 0;
    right:0;
    left:0;
    bottom:0;
    overflow: hidden;
}

#video {
    /*天地中央配置*/
    position: absolute;
    z-index: -1;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*縦横幅指定*/
    width: 177.77777778vh; /* 16:9 の幅→16 ÷ 9＝ 177.77% */
    /* height: 56.25vw;  */
    /* 16:9の幅 → 9 ÷ 16 = 56.25% */
    min-height: 100%;
    min-width: 100%;
}
.hamburger {
    display: none;
    position: fixed;
    width: 100vw;
    height: 100vh;
    background: #000000;
    z-index: 5;
}
.hamburger > ul {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 50%;
    margin: 0 auto;
    margin-top: 15vh;
}
.hamburger > ul > li {
    padding: 1rem;
}
.hamburger > ul > li > a {
    color: #fff;
    font-size: 3rem;
    font-family: 'Kanit', sans-serif;
    font-weight: 500;
    transition-duration: .3s;
}
.hamburger > ul > li > a:hover {
    font-size: 2.5rem;
}
.block {
    display: block;
}

/*==================================================
　5-2-3 3本線が1本線に
===================================*/

/*ボタン外側※レイアウトによってpositionや形状は適宜変更してください*/
.openbtn{
	/*ボタン内側の基点となるためrelativeを指定。
追従するナビゲーションの場合はfixed＋top、rightといった位置をセットで指定*/
	position: relative;
	background:rgba(255, 255, 255, 0);
	cursor: pointer;
    width: 50px;
    height:50px;
	border-radius: 5px;
}

/*ボタン内側*/
.openbtn span{
    display: inline-block;
    transition: all .4s;/*アニメーションの設定*/
    position: absolute;
    left: 14px;
    height: 3.5px;
    border-radius: 0px;
	background: rgb(213, 83, 3);
  	width: 45%;
  }


.openbtn span:nth-of-type(1) {
	top:15px;	
}

.openbtn span:nth-of-type(2) {
	top:23px;
}

.openbtn span:nth-of-type(3) {
	top:31px;
}

/*activeクラスが付与されると1・3番目の要素が2番目の要素と同じ位置になり一本線に*/

.openbtn.active span:nth-of-type(1) ,
.openbtn.active span:nth-of-type(3){
    top: 23px;
}
.main {
    width: 90%;
    margin: 0 auto;
    padding-top: 5rem;
}
/* introduction part */
.intro, .process, .portfolio {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-bottom: 5rem;
}
.intro > p, .process > p, .portfolio > p {
    font-size: 3rem;
    padding: 1rem 0;
    font-family: 'Kanit', sans-serif;
    font-weight: 600;
}
.intro_img {
    width: 500px;
    height: auto;
    margin: 0 auto;
    margin-bottom:.5rem;
}
.intro > span {
    padding: 0.2rem 0;
    font-family: 'Zen Kaku Gothic Antique', sans-serif;
    font-weight: 500;
}
.process_content {
    margin-top: 2rem;
    display: flex;
    align-items: center;
}
/*==================================================
メイキングプロセスのためのcss
===================================*/
.process_content > a > li {
    width: 22vw;
    height: 50vh;
    margin: 0 2vw;
    /* padding: 1rem; */
    display: flex;
    flex-direction: column;
    align-items: center;
    background: #fff;
    border-radius: 20px;
    /* box-shadow: 10px 10px 5px 0px rgba(126, 126, 126, 0.75); */
    transition-duration: .3s;
}
.process_content > a > li > video {
    width: 100%;
    height: auto;
    border-radius: 20px 20px 0 0;
}
.process_content > a > li > p {
    width: 20vw;
    padding: 1.5rem;
    font-family: 'Zen Kaku Gothic Antique', sans-serif;
    line-height: 2rem;
}


#processContent1 {
    margin-left: 0vw;
}
#processContent2 {
    margin-left: 5vw;
}
#processContent3 {
    margin-left: 10vw;
}
/*==================================================
スライダーのためのcss
===================================*/
.slider {/*横幅94%で左右に余白を持たせて中央寄せ*/
    width:94%;
    margin: 2rem auto;
    font-family: 'Zen Kaku Gothic Antique', sans-serif;
}

.slider img {
    width:100%;/*スライダー内の画像を60vwにしてレスポンシブ化*/
    height:auto;
    border-radius: 20px 20px 0 0;
}

.slider .slick-slide {
	transform: scale(0.8);/*左右の画像のサイズを80%に*/
	transition: all .5s;/*拡大や透過のアニメーションを0.5秒で行う*/
	opacity: 0.5;/*透過50%*/
}

.slider .slick-slide.slick-center{
	transform: scale(1);/*中央の画像のサイズだけ等倍に*/
	opacity: 1;/*透過なし*/
}
.slider_content {
    width:45vw;
    height: 70vh;
    background-color: #fff;
    border-radius: 20px;
}
.slider_content > p {
    width: 80%;
    margin: 1rem auto;
    line-height: 2rem;
}


/*矢印の設定*/

/*戻る、次へ矢印の位置*/
.slick-prev, 
.slick-next {
    position: absolute;/*絶対配置にする*/
    top: 42%;
    cursor: pointer;/*マウスカーソルを指マークに*/
    outline: none;/*クリックをしたら出てくる枠線を消す*/
    border-top: 2px solid #666;/*矢印の色*/
    border-right: 2px solid #666;/*矢印の色*/
    height: 15px;
    width: 15px;
}

.slick-prev {/*戻る矢印の位置と形状*/
    left: -1.5%;
    transform: rotate(-135deg);
}

.slick-next {/*次へ矢印の位置と形状*/
    right: -1.5%;
    transform: rotate(45deg);
}

/*ドットナビゲーションの設定*/

.slick-dots {
    text-align:center;
	margin: 2rem 0 0 0;
}

.slick-dots li {
    display:inline-block;
	margin:0 5px;
}

.slick-dots button {
    color: transparent;
    outline: none;
    width:8px;/*ドットボタンのサイズ*/
    height:8px;/*ドットボタンのサイズ*/
    display:block;
    border-radius:50%;
    background:#ccc;/*ドットボタンの色*/
}

.slick-dots .slick-active button{
    background:#333;/*ドットボタンの現在地表示の色*/
}

.element {
    opacity: 0;
  visibility: hidden;
  transform: translateY(30px);
  transition: opacity 1s, visibility 1s, transform 1s;
}
/* フェードイン時に入るクラス */
.is-fadein {
  opacity: 1;
  visibility: visible;
  transform: translateX(0);
}

/*塗りから線に変わる*/
.btnchangeline {
    margin-top: 3%;
    margin-left:50%;
    transform: translate(-50%, 0);
    /*線の基点とするためrelativeを指定*/
	position:relative;
    /*ボタンの形状*/  
	color:#333;
    padding: 10px 30px;
	display:inline-block;
    text-decoration: none;
    outline: none;
    /*アニメーションの指定*/   
	transition:all 0.3s ease-in-out;
}

/*線の設定*/
.btnchangeline::before {
    content: '';
    /*絶対配置で線の位置を決める*/
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 1;
    /*線の形状*/
    width: 100%;
    height: 100%;
    border-top: 1px solid #666;
    border-bottom: 1px solid #666;
    /*はじめは透過0に*/
    opacity: 0;
    transform: scale(0, 1);
    /*アニメーションの指定*/   
    transition: all 0.3s;
}

/*背景の設定*/
.btnchangeline::after {
    content: '';
    /*絶対配置で背景の位置を決める*/
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 1;
    /*背景の形状*/
    border-radius: 20px;
    width: 100%;
    height: 100%;
    background-color:#000;;
    /*アニメーションの指定*/ 
    transition: all 0.3s;
}

/*hoverした際の背景と線の形状*/
.btnchangeline:hover::before {
    opacity: 1;/*不透明に*/ 
    transform: scale(1, 1);/*X方向に線を伸ばす*/
}

.btnchangeline:hover::after {
    opacity: 0;/*透過0に*/
    transform: scale(0, 1);/*X方向に背景を縮小*/
}

/*テキストの設定*/
.btnchangeline span {
    /*テキストを前面に出すためz-indexの値を高く設定*/  
	position: relative;
	z-index: 2;
    /*テキストの形状*/
	color: #fff;
    /*アニメーションの指定*/   
    transition: all 0.3s;
}

/*hoverした際のテキストの形状*/
.btnchangeline:hover span {
    letter-spacing: 2px;
	color: #333;
}

.footer {
    height: 20vh;
    background: black;
    display: flex;
    flex-direction: column;
    align-items: center;
}
.footer > h2 {
    color: #fff;
    font-size: 2.5rem;
    padding: 1rem 0;
    font-family: 'Kanit', sans-serif;
    font-weight: 600;
}
.footer > small {
    color: #fff;
    font-family: 'Kanit', sans-serif;
}